{"id":"node_modules/xstate/lib/stateUtils.js","dependencies":[{"name":"/Users/braflow/fantasy/package.json","includedInParent":true,"mtime":1587828826997},{"name":"/Users/braflow/fantasy/node_modules/xstate/package.json","includedInParent":true,"mtime":1587827886739},{"name":"./utils","loc":{"line":34,"column":22},"parent":"/Users/braflow/fantasy/node_modules/xstate/lib/stateUtils.js","resolved":"/Users/braflow/fantasy/node_modules/xstate/lib/utils.js"}],"generated":{"js":"\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nexports.isLeafNode = function (stateNode) {\n    return stateNode.type === 'atomic' || stateNode.type === 'final';\n};\nfunction getChildren(stateNode) {\n    return utils_1.keys(stateNode.states).map(function (key) { return stateNode.states[key]; });\n}\nexports.getChildren = getChildren;\nfunction getAllStateNodes(stateNode) {\n    var stateNodes = [stateNode];\n    if (exports.isLeafNode(stateNode)) {\n        return stateNodes;\n    }\n    return stateNodes.concat(utils_1.flatten(getChildren(stateNode).map(getAllStateNodes)));\n}\nexports.getAllStateNodes = getAllStateNodes;\nfunction getConfiguration(prevStateNodes, stateNodes) {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n    var prevConfiguration = new Set(prevStateNodes);\n    var prevAdjList = getAdjList(prevConfiguration);\n    var configuration = new Set(stateNodes);\n    try {\n        // add all ancestors\n        for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n            var s = configuration_1_1.value;\n            var m = s.parent;\n            while (m && !configuration.has(m)) {\n                configuration.add(m);\n                m = m.parent;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var adjList = getAdjList(configuration);\n    try {\n        // add descendants\n        for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n            var s = configuration_2_1.value;\n            // if previously active, add existing child nodes\n            if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n                if (prevAdjList.get(s)) {\n                    prevAdjList.get(s).forEach(function (sn) { return configuration.add(sn); });\n                }\n                else {\n                    s.initialStateNodes.forEach(function (sn) { return configuration.add(sn); });\n                }\n            }\n            else {\n                if (s.type === 'parallel') {\n                    try {\n                        for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var child = _f.value;\n                            if (child.type === 'history') {\n                                continue;\n                            }\n                            if (!configuration.has(child)) {\n                                configuration.add(child);\n                                if (prevAdjList.get(child)) {\n                                    prevAdjList.get(child).forEach(function (sn) { return configuration.add(sn); });\n                                }\n                                else {\n                                    child.initialStateNodes.forEach(function (sn) { return configuration.add(sn); });\n                                }\n                            }\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                }\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    try {\n        // add all ancestors\n        for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n            var s = configuration_3_1.value;\n            var m = s.parent;\n            while (m && !configuration.has(m)) {\n                configuration.add(m);\n                m = m.parent;\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return configuration;\n}\nexports.getConfiguration = getConfiguration;\nfunction getValueFromAdj(baseNode, adjList) {\n    var childStateNodes = adjList.get(baseNode);\n    if (!childStateNodes) {\n        return {}; // todo: fix?\n    }\n    if (baseNode.type === 'compound') {\n        var childStateNode = childStateNodes[0];\n        if (childStateNode) {\n            if (exports.isLeafNode(childStateNode)) {\n                return childStateNode.key;\n            }\n        }\n        else {\n            return {};\n        }\n    }\n    var stateValue = {};\n    childStateNodes.forEach(function (csn) {\n        stateValue[csn.key] = getValueFromAdj(csn, adjList);\n    });\n    return stateValue;\n}\nfunction getAdjList(configuration) {\n    var e_5, _a;\n    var adjList = new Map();\n    try {\n        for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n            var s = configuration_4_1.value;\n            if (!adjList.has(s)) {\n                adjList.set(s, []);\n            }\n            if (s.parent) {\n                if (!adjList.has(s.parent)) {\n                    adjList.set(s.parent, []);\n                }\n                adjList.get(s.parent).push(s);\n            }\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return adjList;\n}\nexports.getAdjList = getAdjList;\nfunction getValue(rootNode, configuration) {\n    var config = getConfiguration([rootNode], configuration);\n    return getValueFromAdj(rootNode, getAdjList(config));\n}\nexports.getValue = getValue;\nfunction has(iterable, item) {\n    if (Array.isArray(iterable)) {\n        return iterable.some(function (member) { return member === item; });\n    }\n    if (iterable instanceof Set) {\n        return iterable.has(item);\n    }\n    return false; // TODO: fix\n}\nexports.has = has;\nfunction nextEvents(configuration) {\n    return utils_1.flatten(__spread(new Set(configuration.map(function (sn) { return sn.ownEvents; }))));\n}\nexports.nextEvents = nextEvents;\nfunction isInFinalState(configuration, stateNode) {\n    if (stateNode.type === 'compound') {\n        return getChildren(stateNode).some(function (s) { return s.type === 'final' && has(configuration, s); });\n    }\n    if (stateNode.type === 'parallel') {\n        return getChildren(stateNode).every(function (sn) {\n            return isInFinalState(configuration, sn);\n        });\n    }\n    return false;\n}\nexports.isInFinalState = isInFinalState;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/xstate/lib/stateUtils.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}}],"sources":{"node_modules/xstate/lib/stateUtils.js":"\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nexports.isLeafNode = function (stateNode) {\n    return stateNode.type === 'atomic' || stateNode.type === 'final';\n};\nfunction getChildren(stateNode) {\n    return utils_1.keys(stateNode.states).map(function (key) { return stateNode.states[key]; });\n}\nexports.getChildren = getChildren;\nfunction getAllStateNodes(stateNode) {\n    var stateNodes = [stateNode];\n    if (exports.isLeafNode(stateNode)) {\n        return stateNodes;\n    }\n    return stateNodes.concat(utils_1.flatten(getChildren(stateNode).map(getAllStateNodes)));\n}\nexports.getAllStateNodes = getAllStateNodes;\nfunction getConfiguration(prevStateNodes, stateNodes) {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n    var prevConfiguration = new Set(prevStateNodes);\n    var prevAdjList = getAdjList(prevConfiguration);\n    var configuration = new Set(stateNodes);\n    try {\n        // add all ancestors\n        for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n            var s = configuration_1_1.value;\n            var m = s.parent;\n            while (m && !configuration.has(m)) {\n                configuration.add(m);\n                m = m.parent;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var adjList = getAdjList(configuration);\n    try {\n        // add descendants\n        for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n            var s = configuration_2_1.value;\n            // if previously active, add existing child nodes\n            if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n                if (prevAdjList.get(s)) {\n                    prevAdjList.get(s).forEach(function (sn) { return configuration.add(sn); });\n                }\n                else {\n                    s.initialStateNodes.forEach(function (sn) { return configuration.add(sn); });\n                }\n            }\n            else {\n                if (s.type === 'parallel') {\n                    try {\n                        for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var child = _f.value;\n                            if (child.type === 'history') {\n                                continue;\n                            }\n                            if (!configuration.has(child)) {\n                                configuration.add(child);\n                                if (prevAdjList.get(child)) {\n                                    prevAdjList.get(child).forEach(function (sn) { return configuration.add(sn); });\n                                }\n                                else {\n                                    child.initialStateNodes.forEach(function (sn) { return configuration.add(sn); });\n                                }\n                            }\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                }\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    try {\n        // add all ancestors\n        for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n            var s = configuration_3_1.value;\n            var m = s.parent;\n            while (m && !configuration.has(m)) {\n                configuration.add(m);\n                m = m.parent;\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return configuration;\n}\nexports.getConfiguration = getConfiguration;\nfunction getValueFromAdj(baseNode, adjList) {\n    var childStateNodes = adjList.get(baseNode);\n    if (!childStateNodes) {\n        return {}; // todo: fix?\n    }\n    if (baseNode.type === 'compound') {\n        var childStateNode = childStateNodes[0];\n        if (childStateNode) {\n            if (exports.isLeafNode(childStateNode)) {\n                return childStateNode.key;\n            }\n        }\n        else {\n            return {};\n        }\n    }\n    var stateValue = {};\n    childStateNodes.forEach(function (csn) {\n        stateValue[csn.key] = getValueFromAdj(csn, adjList);\n    });\n    return stateValue;\n}\nfunction getAdjList(configuration) {\n    var e_5, _a;\n    var adjList = new Map();\n    try {\n        for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n            var s = configuration_4_1.value;\n            if (!adjList.has(s)) {\n                adjList.set(s, []);\n            }\n            if (s.parent) {\n                if (!adjList.has(s.parent)) {\n                    adjList.set(s.parent, []);\n                }\n                adjList.get(s.parent).push(s);\n            }\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return adjList;\n}\nexports.getAdjList = getAdjList;\nfunction getValue(rootNode, configuration) {\n    var config = getConfiguration([rootNode], configuration);\n    return getValueFromAdj(rootNode, getAdjList(config));\n}\nexports.getValue = getValue;\nfunction has(iterable, item) {\n    if (Array.isArray(iterable)) {\n        return iterable.some(function (member) { return member === item; });\n    }\n    if (iterable instanceof Set) {\n        return iterable.has(item);\n    }\n    return false; // TODO: fix\n}\nexports.has = has;\nfunction nextEvents(configuration) {\n    return utils_1.flatten(__spread(new Set(configuration.map(function (sn) { return sn.ownEvents; }))));\n}\nexports.nextEvents = nextEvents;\nfunction isInFinalState(configuration, stateNode) {\n    if (stateNode.type === 'compound') {\n        return getChildren(stateNode).some(function (s) { return s.type === 'final' && has(configuration, s); });\n    }\n    if (stateNode.type === 'parallel') {\n        return getChildren(stateNode).every(function (sn) {\n            return isInFinalState(configuration, sn);\n        });\n    }\n    return false;\n}\nexports.isInFinalState = isInFinalState;\n"},"lineCount":225}},"error":null,"hash":"1bfe25a068d70f774079adad7ac1d339","cacheData":{"env":{}}}